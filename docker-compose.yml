version: '3'
services:
  static:
    container_name: frontend-react
    build: ./client
    volumes:
      - ./client/react/dist:/var/www/html
    ports:
      - 6120:80 #ubuntuのhttpリクエストは８０ポートで受け付ける。そのため、コンテナ内部ポートを80にしている

  nodereact:
    container_name: node_react
    build: ./client/react
    volumes:
      - ./client/react:/app
    tty: true
    ports:
      - 6110:5173 #vite-reactのデフォルト開放ぽーとは5173。ただし、vite.config.jsにPORT指定できるので、変更した場合は：右側のコンテナ内部ポートも変更すること
    working_dir: /app
    command: >
      bash -c 'npm i && npm run build:watch && npm run dev'

  nodeback:
    container_name: node_express_knex
    build: ./server
    volumes:
      - ./server:/app
    tty: true
    ports:
      - 6100:8080
    working_dir: /app
    environment:
      POSTGRES_HOST: '${DOCKER_POSTGTES_HOST}'
      POSTGRES_DB: '${DOCKER_POSTGRES_DB}'
      POSTGRES_USER: '${DOCKER_POSTGRES_USER}'
      POSTGRES_PASSWORD: '${DOCKER_POSTGRES_PASSWORD}'
      NODE_ENV: development
    command: >
      bash -c 'npm i && npm run build && npm run dev'
    depends_on:
      - postgres #必ず先にpostgresコンテナを立ち上げる

  postgres:
    container_name: '${DOCKER_POSTGTES_HOST}' #jsで指定するホストはこの名前にすること！！！
    image: postgres:14
    ports:
      - 6101:5432 # Out側(:の左)はホストマシンからのアクセスポートだが、実質使うことがないのでなんでも良い。内部側(:の右)はPostgresデフォルトの5432にして、JSからのアクセスポートもこの5432を使用することになる
    environment:
      POSTGRES_USER: '${DOCKER_POSTGRES_USER}'
      POSTGRES_PASSWORD: '${DOCKER_POSTGRES_PASSWORD}'
      POSTGRES_DB: '${DOCKER_POSTGRES_DB}' #ここで定義したデータベースが初期設定の際に作成される
    volumes:
      - ./server/postgres_db:/var/lib/postgresql/data
      # - ./initdb:/docker-entrypoint-initdb.d
